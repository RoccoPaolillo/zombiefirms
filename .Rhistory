"RP_REPGEN0020211218ehci0000g", # Ferrero footbal manager case, no covid
"RP_REPGEN0020220113ei1d00004", # court case, no covid
"CS_CORDES0020210209eh290004j", # piece of news
"CS_CORSUP0020210713eh7d0000v", # about cooperatives, not politics involvement
"GN_GIONLE0020210302eh320002j", # out of context,
"GN_GIONLE0020210501eh5100003", # short, court case
"CS_CORONL0020211103ehb30015p", # just mentioned, broad comment on Draghi
"CS_CORONL0020200706eg76000en" # startup Intesa San Paolo
))
# Italy: corpus preparation for KEYNESS CORPUS-LEVEL AND CO-OCCURRENCES NETWORKS analysis   ####
corpus_it08 <- tolower(corpus_it08)
corpus_it08 <- gsub("'", " ",  corpus_it08)
corpus_it08 <- gsub("’", " ",  corpus_it08)
corpus_it08 <- gsub("‘", " ", corpus_it08)
corpus_it08 <- gsub("«", " ",  corpus_it08)
corpus_it08 <- gsub("»", " ",  corpus_it08)
corpus_it08 <- gsub("„"," ", corpus_it08)
corpus_it08 <- gsub("“"," ",corpus_it08)
corpus_it08 <- gsub("\"", " ",  corpus_it08)
corpus_it08 <- gsub("\n", " ", corpus_it08)
corpus_it08 <- gsub("\t", " ",  corpus_it08)
corpus_it08 <- gsub("\\s+", " ", corpus_it08)
# other file: corpus converted to text
tx_it <- convert(corpus_it08, to = "data.frame")
zombiefirm_pattern_it <- read_xls("zombiefirms.xls",sheet = "it_lemma")[,1] # no lemmatized terms
zombiefirm_pattern_it <- paste0("\\b",zombiefirm_pattern_it$keyword_it,"\\b") # worked to convert
zombiefirm_replace_it <- read_xls("zombiefirms.xls",sheet = "it_lemma")[,2] # lemmatized version
names(zombiefirm_replace_it$lemma_itzmb) <- zombiefirm_pattern_it
tx_it$text <- str_replace_all(tx_it$text, zombiefirm_replace_it$lemma_itzmb )
# removal list
# zombiefirm_removepat_it <- read.xls("zombiefirms.xls",sheet = "it_rem", encoding = "latin1")[,1]
# zombiefirm_removepat_it <- paste0("\\b",zombiefirm_removepat_it,"\\b")
# zombiefirm_removerpl_it <- read.xls("zombiefirms.xls",sheet = "it_rem", encoding = "latin1")[,2]
# names(zombiefirm_removerpl_it) <- zombiefirm_removepat_it
# tx_it$text <- str_replace_all(tx_it$text,zombiefirm_removerpl_it)
zombiefirm_removepat_it <- read_xls("zombiefirms.xls",sheet = "it_rem")[,1]
zombiefirm_removepat_it <- paste0("\\b",zombiefirm_removepat_it$rem_it,"\\b")
zombiefirm_removerpl_it <- read_xls("zombiefirms.xls",sheet = "it_rem")[,2]
names(zombiefirm_removerpl_it$rem_it_replace) <- zombiefirm_removepat_it
tx_it$text <- str_replace_all(tx_it$text,zombiefirm_removerpl_it$rem_it_replace)
# rem_it <- read.xls("zombiefirms.xls",sheet = "it_rem", encoding = "latin1")[,2]
# rem_it <- unique(rem_it)
rem_it <- read_xls("zombiefirms.xls",sheet = "it_rem")[,2]
rem_it <- unique(rem_it$rem_it_replace)
corpus_it08 <- corpus(tx_it)
# document-term matrix
dfm_it <-  tokens( corpus_it08,
remove_punct = TRUE,
remove_symbols = TRUE,
remove_separators = TRUE,
remove_numbers = TRUE,
remove_url = FALSE
) %>%
tokens_tolower() %>%
#  tokens_compound(phrase(c(bg_it))) %>%
#  tokens_remove(c(stopwords("it"),stopwords_it, get_stopwords(language = "it"),rem_it)) %>%
tokens_remove(c(stopwords("it"), get_stopwords(language = "it"),rem_it)) %>%
dfm()
fcm_lf <- tokens(corpus_subset(corpus_de08,datet >= "2020-01-01" & rating == "left"),
remove_punct = TRUE, remove_symbols = TRUE, remove_separators = TRUE,
remove_numbers = TRUE,remove_url = FALSE) %>%
tokens_tolower() %>%
# tokens_compound(phrase(c(bg_de))) %>%
tokens_remove(c(stopwords("de"),get_stopwords(language = "de"),rem_de,
"heute","neuen","statt")) %>%
fcm(context = "window", window = 20, tri = FALSE)  # 20 words window unit
co_occur_network_lf <- graph_from_adjacency_matrix(fcm_lf, mode = "undirected", diag = FALSE)
options(digits = 3)
library(ggplot2)
library(plyr)
library(dplyr)
library(quanteda)
library(quanteda.textstats)
library(quanteda.textmodels)
library(quanteda.textplots)
library(topicmodels)
library(stm)
library(tidytext)
library(plotly)
library(lubridate)
library(corpus)
fcm_lf <- tokens(corpus_subset(corpus_de08,datet >= "2020-01-01" & rating == "left"),
remove_punct = TRUE, remove_symbols = TRUE, remove_separators = TRUE,
remove_numbers = TRUE,remove_url = FALSE) %>%
tokens_tolower() %>%
# tokens_compound(phrase(c(bg_de))) %>%
tokens_remove(c(stopwords("de"),get_stopwords(language = "de"),rem_de,
"heute","neuen","statt")) %>%
fcm(context = "window", window = 20, tri = FALSE)  # 20 words window unit
# degree centrality (plotting undirected network), selecting top 30 words
co_occur_network_lf <- graph_from_adjacency_matrix(fcm_lf, mode = "undirected", diag = FALSE)
library(igraph)
fcm_lf <- tokens(corpus_subset(corpus_de08,datet >= "2020-01-01" & rating == "left"),
remove_punct = TRUE, remove_symbols = TRUE, remove_separators = TRUE,
remove_numbers = TRUE,remove_url = FALSE) %>%
tokens_tolower() %>%
# tokens_compound(phrase(c(bg_de))) %>%
tokens_remove(c(stopwords("de"),get_stopwords(language = "de"),rem_de,
"heute","neuen","statt")) %>%
fcm(context = "window", window = 20, tri = FALSE)  # 20 words window unit
# degree centrality (plotting undirected network), selecting top 30 words
co_occur_network_lf <- graph_from_adjacency_matrix(fcm_lf, mode = "undirected", diag = FALSE)
nm_occ <- as.data.frame(names(V(co_occur_network_lf)))
dg_occ <- as.data.frame(strength(co_occur_network_lf))
df_occ <- cbind(nm_occ,dg_occ)
df_occ <- df_occ[order(-strength(co_occur_network_lf)),]
df_occ[1:21,]
co_occur_network_lf2 <- graph_from_adjacency_matrix(fcm_select(fcm_lf, pattern = df_occ[1:21,1]),
mode = "undirected", diag = FALSE)
E(co_occur_network_lf2)$weight <- 1
co_occur_network_lf2 <- simplify(co_occur_network_lf2, edge.attr.comb=list(weight="sum"))
co_occur_network_lf2$ref <- paste0(unique(corpus_de08$country)," ","Left")
tk_lf <- tkplot(co_occur_network_lf2) # manually modify layout
l_lf <- tkplot.getcoords(tk_lf) # to take layout from tkplot geo coordinate
# plotting final graph, weights for editing
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
# Right Germany
fcm_rt <- tokens(corpus_subset(corpus_de08,datet >= "2020-01-01" & rating == "right"),
remove_punct = TRUE, remove_symbols = TRUE, remove_separators = TRUE,
remove_numbers = TRUE,remove_url = FALSE) %>%
tokens_tolower() %>%
# tokens_compound(phrase(c(bg_de))) %>%
tokens_remove(c(stopwords("de"),stopwords_de, get_stopwords(language = "de"),rem_de )) %>%
fcm(context = "window", window = 20, tri = FALSE)  # 20 words window unit
fcm_lf <- tokens(corpus_subset(corpus_de08,datet >= "2020-01-01" & rating == "left"),
remove_punct = TRUE, remove_symbols = TRUE, remove_separators = TRUE,
remove_numbers = TRUE,remove_url = FALSE) %>%
tokens_tolower() %>%
# tokens_compound(phrase(c(bg_de))) %>%
tokens_remove(c(stopwords("de"),get_stopwords(language = "de"),rem_de,
"heute","neuen","statt")) %>%
fcm(context = "window", window = 20, tri = FALSE)  # 20 words window unit
# degree centrality (plotting undirected network), selecting top 30 words
co_occur_network_lf <- graph_from_adjacency_matrix(fcm_lf, mode = "undirected", diag = FALSE)
nm_occ <- as.data.frame(names(V(co_occur_network_lf)))
dg_occ <- as.data.frame(strength(co_occur_network_lf))
df_occ <- cbind(nm_occ,dg_occ)
df_occ <- df_occ[order(-strength(co_occur_network_lf)),]
df_occ[1:21,]
co_occur_network_lf2 <- graph_from_adjacency_matrix(fcm_select(fcm_lf, pattern = df_occ[1:21,1]),
mode = "undirected", diag = FALSE)
E(co_occur_network_lf2)$weight <- 1
co_occur_network_lf2 <- simplify(co_occur_network_lf2, edge.attr.comb=list(weight="sum"))
co_occur_network_lf2$ref <- paste0(unique(corpus_de08$country)," ","Left")
tk_lf <- tkplot(co_occur_network_lf2) # manually modify layout
l_lf <- tkplot.getcoords(tk_lf) # to take layout from tkplot geo coordinate
# plotting final graph, weights for editing
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
# Right Germany
fcm_rt <- tokens(corpus_subset(corpus_de08,datet >= "2020-01-01" & rating == "right"),
remove_punct = TRUE, remove_symbols = TRUE, remove_separators = TRUE,
remove_numbers = TRUE,remove_url = FALSE) %>%
tokens_tolower() %>%
# tokens_compound(phrase(c(bg_de))) %>%
tokens_remove(c(stopwords("de"), get_stopwords(language = "de"),rem_de )) %>%
fcm(context = "window", window = 20, tri = FALSE)  # 20 words window unit
# degree centrality (plotting undirected network), selecting top 30 words
co_occur_network_rt <- graph_from_adjacency_matrix(fcm_rt, mode = "undirected", diag = FALSE)
nm_occrt <- as.data.frame(names(V(co_occur_network_rt)))
dg_occrt <- as.data.frame(strength(co_occur_network_rt))
df_occrt <- cbind(nm_occrt,dg_occrt)
df_occrt <- df_occrt[order(-strength(co_occur_network_rt)),]
df_occrt[1:21,]
co_occur_network_rt2 <- graph_from_adjacency_matrix(fcm_select(fcm_rt, pattern = df_occrt[1:21,1]),
mode = "undirected", diag = FALSE)
E(co_occur_network_rt2)$weight <- 1
co_occur_network_rt2 <- simplify(co_occur_network_rt2, edge.attr.comb=list(weight="sum"))
co_occur_network_rt2$ref <- paste0(unique(corpus_de08$country)," ","Right")
tk_rt <- tkplot(co_occur_network_rt2) # manually modify layout
l_rt <- tkplot.getcoords(tk_rt) # to take layout from tk_rt geo coordinate
# plotting final graph, weights for editing
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_rt2,
layout = l_rt,
vertex.size = ( strength(co_occur_network_rt2) / max(strength(co_occur_network_rt2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_rt2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_rt2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_rt2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_rt2$ref,cex.main= 2)
fcm_lf <- tokens(corpus_subset(corpus_de08,datet >= "2020-01-01" & rating == "left"),
remove_punct = TRUE, remove_symbols = TRUE, remove_separators = TRUE,
remove_numbers = TRUE,remove_url = FALSE) %>%
tokens_tolower() %>%
# tokens_compound(phrase(c(bg_de))) %>%
tokens_remove(c(stopwords("de"),get_stopwords(language = "de"),rem_de,
"heute","neuen","statt")) %>%
fcm(context = "window", window = 20, tri = FALSE)  # 20 words window unit
# degree centrality (plotting undirected network), selecting top 30 words
co_occur_network_lf <- graph_from_adjacency_matrix(fcm_lf, mode = "undirected", diag = FALSE)
nm_occ <- as.data.frame(names(V(co_occur_network_lf)))
dg_occ <- as.data.frame(strength(co_occur_network_lf))
df_occ <- cbind(nm_occ,dg_occ)
df_occ <- df_occ[order(-strength(co_occur_network_lf)),]
df_occ[1:21,]
co_occur_network_lf2 <- graph_from_adjacency_matrix(fcm_select(fcm_lf, pattern = df_occ[1:21,1]),
mode = "undirected", diag = FALSE)
E(co_occur_network_lf2)$weight <- 1
co_occur_network_lf2 <- simplify(co_occur_network_lf2, edge.attr.comb=list(weight="sum"))
co_occur_network_lf2$ref <- paste0(unique(corpus_de08$country)," ","Left")
tk_lf <- tkplot(co_occur_network_lf2) # manually modify layout
l_lf <- tkplot.getcoords(tk_lf) # to take layout from tkplot geo coordinate
# plotting final graph, weights for editing
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
# plotting final graph, weights for editing
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
fcm_lf <- tokens(corpus_subset(corpus_de08,datet >= "2020-01-01" & rating == "left"),
remove_punct = TRUE, remove_symbols = TRUE, remove_separators = TRUE,
remove_numbers = TRUE,remove_url = FALSE) %>%
tokens_tolower() %>%
# tokens_compound(phrase(c(bg_de))) %>%
tokens_remove(c(stopwords("de"),get_stopwords(language = "de"),rem_de,
"heute","neuen","statt")) %>%
fcm(context = "window", window = 20, tri = FALSE)  # 20 words window unit
# degree centrality (plotting undirected network), selecting top 30 words
co_occur_network_lf <- graph_from_adjacency_matrix(fcm_lf, mode = "undirected", diag = FALSE)
nm_occ <- as.data.frame(names(V(co_occur_network_lf)))
dg_occ <- as.data.frame(strength(co_occur_network_lf))
df_occ <- cbind(nm_occ,dg_occ)
df_occ <- df_occ[order(-strength(co_occur_network_lf)),]
df_occ[1:21,]
co_occur_network_lf2 <- graph_from_adjacency_matrix(fcm_select(fcm_lf, pattern = df_occ[1:21,1]),
mode = "undirected", diag = FALSE)
E(co_occur_network_lf2)$weight <- 1
co_occur_network_lf2 <- simplify(co_occur_network_lf2, edge.attr.comb=list(weight="sum"))
co_occur_network_lf2$ref <- paste0(unique(corpus_de08$country)," ","Left")
tk_lf <- tkplot(co_occur_network_lf2) # manually modify layout
l_lf <- tkplot.getcoords(tk_lf) # to take layout from tkplot geo coordinate
# plotting final graph, weights for editing
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
fcm_lf <- tokens(corpus_subset(corpus_de08,datet >= "2020-01-01" & rating == "left"),
remove_punct = TRUE, remove_symbols = TRUE, remove_separators = TRUE,
remove_numbers = TRUE,remove_url = FALSE) %>%
tokens_tolower() %>%
# tokens_compound(phrase(c(bg_de))) %>%
tokens_remove(c(stopwords("de"),get_stopwords(language = "de"),rem_de,
"heute","neuen","statt")) %>%
fcm(context = "window", window = 20, tri = FALSE)  # 20 words window unit
# degree centrality (plotting undirected network), selecting top 30 words
co_occur_network_lf <- graph_from_adjacency_matrix(fcm_lf, mode = "undirected", diag = FALSE)
nm_occ <- as.data.frame(names(V(co_occur_network_lf)))
dg_occ <- as.data.frame(strength(co_occur_network_lf))
df_occ <- cbind(nm_occ,dg_occ)
df_occ <- df_occ[order(-strength(co_occur_network_lf)),]
df_occ[1:21,]
co_occur_network_lf2 <- graph_from_adjacency_matrix(fcm_select(fcm_lf, pattern = df_occ[1:21,1]),
mode = "undirected", diag = FALSE)
E(co_occur_network_lf2)$weight <- 1
co_occur_network_lf2 <- simplify(co_occur_network_lf2, edge.attr.comb=list(weight="sum"))
co_occur_network_lf2$ref <- paste0(unique(corpus_de08$country)," ","Left")
tk_lf <- tkplot(co_occur_network_lf2) # manually modify layout
l_lf <- tkplot.getcoords(tk_lf) # to take layout from tkplot geo coordinate
# plotting final graph, weights for editing
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
fcm_lf <- tokens(corpus_subset(corpus_de08,datet >= "2020-01-01" & rating == "left"),
remove_punct = TRUE, remove_symbols = TRUE, remove_separators = TRUE,
remove_numbers = TRUE,remove_url = FALSE) %>%
tokens_tolower() %>%
# tokens_compound(phrase(c(bg_de))) %>%
tokens_remove(c(stopwords("de"),get_stopwords(language = "de"),rem_de,
"heute","neuen","statt")) %>%
fcm(context = "window", window = 20, tri = FALSE)  # 20 words window unit
# degree centrality (plotting undirected network), selecting top 30 words
co_occur_network_lf <- graph_from_adjacency_matrix(fcm_lf, mode = "undirected", diag = FALSE)
nm_occ <- as.data.frame(names(V(co_occur_network_lf)))
dg_occ <- as.data.frame(strength(co_occur_network_lf))
df_occ <- cbind(nm_occ,dg_occ)
df_occ <- df_occ[order(-strength(co_occur_network_lf)),]
df_occ[1:21,]
co_occur_network_lf2 <- graph_from_adjacency_matrix(fcm_select(fcm_lf, pattern = df_occ[1:21,1]),
mode = "undirected", diag = FALSE)
E(co_occur_network_lf2)$weight <- 1
co_occur_network_lf2 <- simplify(co_occur_network_lf2, edge.attr.comb=list(weight="sum"))
co_occur_network_lf2$ref <- paste0(unique(corpus_de08$country)," ","Left")
tk_lf <- tkplot(co_occur_network_lf2) # manually modify layout
l_lf <- tkplot.getcoords(tk_lf) # to take layout from tkplot geo coordinate
# plotting final graph, weights for editing
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
fcm_lf <- tokens(corpus_subset(corpus_de08,datet >= "2020-01-01" & rating == "left"),
remove_punct = TRUE, remove_symbols = TRUE, remove_separators = TRUE,
remove_numbers = TRUE,remove_url = FALSE) %>%
tokens_tolower() %>%
# tokens_compound(phrase(c(bg_de))) %>%
tokens_remove(c(stopwords("de"),get_stopwords(language = "de"),rem_de,
"heute","neuen","statt")) %>%
fcm(context = "window", window = 20, tri = FALSE)  # 20 words window unit
# degree centrality (plotting undirected network), selecting top 30 words
co_occur_network_lf <- graph_from_adjacency_matrix(fcm_lf, mode = "undirected", diag = FALSE)
nm_occ <- as.data.frame(names(V(co_occur_network_lf)))
dg_occ <- as.data.frame(strength(co_occur_network_lf))
df_occ <- cbind(nm_occ,dg_occ)
df_occ <- df_occ[order(-strength(co_occur_network_lf)),]
df_occ[1:21,]
co_occur_network_lf2 <- graph_from_adjacency_matrix(fcm_select(fcm_lf, pattern = df_occ[1:21,1]),
mode = "undirected", diag = FALSE)
E(co_occur_network_lf2)$weight <- 1
co_occur_network_lf2 <- simplify(co_occur_network_lf2, edge.attr.comb=list(weight="sum"))
co_occur_network_lf2$ref <- paste0(unique(corpus_de08$country)," ","Left")
tk_lf <- tkplot(co_occur_network_lf2) # manually modify layout
l_lf <- tkplot.getcoords(tk_lf) # to take layout from tkplot geo coordinate
# plotting final graph, weights for editing
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
# plotting final graph, weights for editing
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
# plotting final graph, weights for editing
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
par(mar = c(0, 0,1.3 , 0))
plot(co_occur_network_lf2,
layout = l_lf,
vertex.size = ( strength(co_occur_network_lf2) / max(strength(co_occur_network_lf2)) * 20),
vertex.shape = "circle",
vertex.label =  paste0(V(co_occur_network_lf2)$name),
vertex.label.color = "black",
vertex.label.cex = 2,
vertex.color = "white",
edge.width = (E(co_occur_network_lf2)$weight / 3),
layout=layout.circle,
vertex.label.font = ifelse(V(co_occur_network_lf2)$name == "zombie_firms",2,1),
vertex.label.dist = 1.2
)
title(co_occur_network_lf2$ref,cex.main= 2)
